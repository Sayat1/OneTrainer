#@title MAKE TRAIN JSON FROM PARAMETERS
import json
json_raw = {
    "__version": 1,
    "training_method": TRAIN_METHOD,
    "model_type": "STABLE_DIFFUSION_15",
    "debug_mode": False,
    "debug_dir": "/content/debug",
    "workspace_dir": "/content/drive/MyDrive/Training/model/"+OUTNAME+"/",
    "cache_dir": "/content/workspace-cache/run",
    "tensorboard": False,
    "tensorboard_expose": False,
    "continue_last_backup": True,
    "base_model_name": NAI,
    "weight_dtype": WEIGHT_DTYPE,
    "output_dtype": OUT_DTYPE,
    "output_model_format": "SAFETENSORS",
    "output_model_destination": OUTPUTPATH,
    "gradient_checkpointing": True,
    "concept_file_name": CONCEPT,
    "circular_mask_generation": False,
    "random_rotate_and_crop": False,
    "aspect_ratio_bucketing": BUCKET,
    "latent_caching": True,
    "clear_cache_before_training": CLEAN_CACHE,
    "learning_rate_scheduler": SCHEDULER,
    "learning_rate": 1.0,
    "learning_rate_warmup_steps": LR_WARMUP,
    "learning_rate_cycles": LR_CYCLES,
    "epochs": EPOCH,
    "batch_size": BATCH_SIZE,
    "gradient_accumulation_steps": GRADIENT_ACCUMULATION,
    "ema": EMA,
    "ema_decay": EMA_DECAY,
    "ema_update_step_interval": EMA_INTERVAL,
    "train_device": "cuda",
    "temp_device": "cpu",
    "train_dtype": TRAIN_DTYPE,
    "fallback_train_dtype": "FLOAT_32",
    "only_cache": False,
    "resolution": RESOLUTION,
    "attention_mechanism": "XFORMERS",
    "align_prop": False,
    "align_prop_probability": 0.1,
    "align_prop_loss": "AESTHETIC",
    "align_prop_weight": 0.01,
    "align_prop_steps": 20,
    "align_prop_truncate_steps": 0.5,
    "align_prop_cfg_scale": 7.0,
    "mse_strength": 1.0,
    "mae_strength": 0.0,
    "vb_loss_strength": 1.0,
	"min_snr_gamma": MIN_SNR,
    "loss_scaler": LOSS_SCALER,
    "learning_rate_scaler": LR_SCALER,
    "train_unet": True,
    "train_unet_epochs": 10000,
    "unet_learning_rate": UNET_LR,
    "offset_noise_weight": 0.0,
    "perturbation_noise_weight": 0.0,
    "rescale_noise_scheduler_to_zero_terminal_snr": False,
    "force_v_prediction": False,
    "force_epsilon_prediction": False,
    "min_noising_strength": 0.0,
    "max_noising_strength": MAX_NOISE,
    "noising_weight": 0.0,
    "noising_bias": 0.5,
    "unet_weight_dtype": "NONE",
	"prior_model_name": "",
    "train_prior": True,
    "train_prior_epochs": 10000,
    "prior_learning_rate": None,
    "prior_weight_dtype": "NONE",
    "train_text_encoder": TRAIN_TE,
    "train_text_encoder_epochs": 10000,
    "text_encoder_learning_rate": TE_LR,
    "text_encoder_layer_skip": TE_LAYER_SKIP,
    "text_encoder_weight_dtype": "NONE",
    "train_text_encoder_2": TRAIN_TE,
    "train_text_encoder_2_epochs": 30,
    "text_encoder_2_learning_rate": None,
    "text_encoder_2_layer_skip": 0,
    "text_encoder_2_weight_dtype": "NONE",
    "vae_model_name": "",
    "vae_weight_dtype": "FLOAT_32",
    "effnet_encoder_model_name": "",
    "effnet_encoder_weight_dtype": "NONE",
    "decoder_model_name": "",
    "decoder_weight_dtype": "NONE",
    "decoder_text_encoder_weight_dtype": "NONE",
    "decoder_vqgan_weight_dtype": "NONE",
    "masked_training": MASK_TRAIN,
    "unmasked_probability": 0.1,
    "unmasked_weight": 0.1,
    "normalize_masked_area_loss": NORM_MASK_LOSS,
    "embedding_model_names": [],
    "token_count": 1,
    "initial_embedding_text": "*",
    "embedding_weight_dtype": "FLOAT_32",
    "lora_model_name": LORA_CONTINUE,
    "lora_rank": LORA_RANK,
    "lora_alpha": LORA_ALPHA,
    "lora_conv_rank": LORA_CONV_RANK,
    "lora_conv_alpha": LORA_CONV_ALPHA,
    "lora_weight_dtype": "FLOAT_32",
    "lora_modules" : LORA_MODULES,
    "optimizer": {
        "__version": 0,
        "optimizer": "ADAMW_8BIT",
        "adam_w_mode": False,
        "alpha": None,
        "amsgrad": False,
        "beta1": 0.9,
        "beta2": 0.999,
        "beta3": None,
        "bias_correction": False,
        "block_wise": True,
        "capturable": False,
        "centered": False,
        "clip_threshold": None,
        "d0": None,
        "d_coef": None,
        "dampening": None,
        "decay_rate": None,
        "decouple": False,
        "differentiable": False,
        "eps": 1e-08,
        "eps2": None,
        "foreach": False,
        "fsdp_in_use": False,
        "fused": False,
        "growth_rate": None,
        "initial_accumulator_value": None,
        "is_paged": False,
        "log_every": None,
        "lr_decay": None,
        "max_unorm": None,
        "maximize": False,
        "min_8bit_size": 4096,
        "momentum": None,
        "nesterov": False,
        "no_prox": False,
        "optim_bits": 32,
        "percentile_clipping": 100.0,
        "relative_step": False,
        "safeguard_warmup": False,
        "scale_parameter": False,
        "use_bias_correction": False,
        "use_triton": False,
        "warmup_init": False,
        "weight_decay": 0.01
    },
    "optimizer_defaults": {},
    "sample_definition_file_name": "training_samples/samples.json",
    "samples": [
        {
            "__version": 0,
            "enabled": True,
            "prompt": "lvsyn woman,portrait",
            "negative_prompt": "",
            "height": 512,
            "width": 512,
            "seed": 42,
            "random_seed": False,
            "diffusion_steps": 20,
            "cfg_scale": 7.0,
            "noise_scheduler": "DDIM"
        }
    ],
    "sample_after": 10,
    "sample_after_unit": "NEVER",
    "sample_image_format": "JPG",
    "samples_to_tensorboard": True,
    "non_ema_sampling": True,
    "backup_after": BACKUP_AFTER,
    "backup_after_unit": BACKUP_AFTER_UNIT,
    "rolling_backup": ROLLING_BACKUP,
    "rolling_backup_count": ROLLING_BACKUP_COUNT,
    "backup_before_save": BACKUP_BEFORE_SAVE,
    "save_after": SAVE_AFTER,
    "save_after_unit": SAVE_AFTER_UNIT,
    "rolling_save_count": ROLLING_SAVE_COUNT
}
json_raw['optimizer'].update(OPTIMIZER_SETTINGS)
try:
  if IN_DEV_SETTINGS:
    json_raw.update(IN_DEV_SETTINGS)
except NameError as e:
  pass

with open('/content/train_json.json',mode='w') as f:
  json.dump(json_raw,f,indent=4)